<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bit.or.eesotto.dao.BlogDao">


	<!-- 모두의 블로그 리스트 조회 -->
	<select id="getPostList" resultType="bit.or.eesotto.dto.Blog">
		
		SET @ROWNUM:= 0;
		SELECT * FROM (SELECT @ROWNUM := @ROWNUM +1 ROWNUM, B.* FROM BLOG B 
		<where>
				<if test="param3 != null">
					userid not in (#{param3}) 
				</if>
		</where>		
		) S WHERE ROWNUM 
		BETWEEN #{param1}*#{param2}-(#{param2}-1) AND #{param1}*#{param2}
		
	</select>
	
	<!-- 블로그 포스팅 수 조회 -->
	
	<select id="getPostCount" resultType="int">
		select count(*) from blog
		<if test="#{userid} != null">
			where userid = #{userid}
		</if>
	</select>
	
	<!--  내 블로그 리스트 조회 -->
	<select id="getMyPostList" resultType="bit.or.eesotto.dto.Blog">
		
		SET @ROWNUM:= 0;
		SELECT * FROM (SELECT @ROWNUM := @ROWNUM +1 ROWNUM, B.* FROM BLOG B 
						WHERE USERID=#{param3}		
		) S WHERE ROWNUM 
		BETWEEN #{param1}*#{param2}-(#{param2}-1) AND #{param1}*#{param2}
		
	</select>	
	
	
	

	

	<!-- 
	// 사원 상세정보 보기 public Emp getDetail(int empno)
	<select id="getDetail" resultType="dto.Emp">
		select * from emp where empno=#{empno}
	</select>

	// 사원 등록 public int insertEmp(Emp emp);
	<insert id="insertEmp" parameterType="dto.Emp">
		insert into Emp(empno, ename, job, mgr, hiredate, sal, comm, deptno, img)
		values(#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno},#{img})
	</insert>

	// 사원 정보 수정 public int updateEmp(Emp emp);
	<update id="updateEmp" parameterType="dto.Emp">
		update emp
		set ename=#{ename}, job=#{job}, mgr=#{mgr},
		sal=#{sal}, comm=#{comm}, deptno=#{deptno},
		img=#{img}
		where empno=#{empno}
	</update>

	// 사원 정보 삭제 public int deleteEmp(int empno)
	<delete id="deleteEmp">
		delete from emp where empno=#{empno}
	</delete>

	//ajax 직종 불러오기 public List<String> getEmpJob();
	<select id="getEmpJob" resultType="String">
		select distinct job from emp order by job
	</select>

	//ajax 부서번호 불러오기 public List<Integer> getDeptno();
	<select id="getDeptno" resultType="Integer">
		select distinct deptno from emp order by deptno
	</select>

	사번으로 검색
	<select id="getEmpListByEmpno" resultType="dto.Emp">
		SELECT * FROM
		(SELECT ROWNUM NUM, E.* FROM
		(SELECT * FROM EMP WHERE EMPNO LIKE '%' || ${param3} || '%' ) E
		) WHERE NUM BETWEEN ${param1}*${param2}-(${param2}-1) AND
		${param1}*${param2}
	</select>

	부서번호 선택
	<select id="getEmpListByDeptno" resultType="dto.Emp">
		SELECT * FROM
		(SELECT ROWNUM NUM, E.* FROM
		(SELECT * FROM EMP WHERE DEPTNO=${param3}) E
		) WHERE NUM BETWEEN ${param1}*${param2}-(${param2}-1) AND
		${param1}*${param2}

	</select> -->



</mapper>














